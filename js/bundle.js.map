{"version":3,"file":"bundle.js","mappings":"mBAIAA,OAAOC,iBAAiB,oBAAoB,MCF5C,WACI,MAAMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKD,iBAAiB,UAAWI,IAC7BA,EAAEC,iBAEF,MAAMC,EAAW,IAAIC,SAASN,GCRrBO,OAAOC,EAAKC,KACzB,MAAMC,QAAYC,MDUL,6BCVgB,CACzBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAML,IAGV,aAAaC,EAAIK,QDEbC,CAAS,EAFIC,KAAKC,UAAUC,OAAOC,YAAYf,EAASgB,aAEXC,MAAKb,IAC9Cc,QAAQC,IAAIf,UDNpB,GGJJ,WACI,MAAMgB,EACFC,YAAYC,EAAMC,KAASC,GAEvBC,KAAKH,KAAOA,EACZG,KAAKF,KAAOA,EAEZE,KAAKD,QAAUA,EACfC,KAAKC,OAAS9B,SAASC,cAAc,eAGzC8B,SACI,MAAMC,EAAUhC,SAASiC,cAAc,MAEX,IAAxBJ,KAAKD,QAAQM,QACbL,KAAKG,QAAU,OACfA,EAAQG,UAAUC,IAAIP,KAAKG,UAE3BH,KAAKD,QAAQS,SAAQC,GAAaN,EAAQG,UAAUC,IAAIE,KAG5DN,EAAQO,UAAY,wCACKV,KAAKH,2DACGG,KAAKF,kCAEtCE,KAAKC,OAAOU,OAAOR,KAW3B,SAASS,EAAQlC,GACbG,MAAMH,GACLc,MAAMqB,GACIA,EAAS5B,SAEnBO,MAAMb,IACH,IAAImC,EAAM3B,KAAK4B,MAAM5B,KAAKC,UAAUT,IAGpC,OAaR,SAAmBmC,GACf,MAAM,MAAEE,GAAUF,EACZb,EAAS9B,SAASC,cAAc,eAChC6C,EAAW9C,SAASC,cAAc,eACxCqB,QAAQC,IAAIoB,GACZE,EAAMR,SAASU,IACX,MAAMf,EAAUhC,SAASiC,cAAc,MACnCc,EAAKC,SACLhB,EAAQG,UAAUC,IAAI,UACtBU,EAASP,UAAY,IAezBP,EAAQO,UAAY,gCACHQ,EAAKE,YACtBnB,EAAOU,OAAOR,GAEE,MAAZe,EAAKxC,KACLyB,EAAQG,UAAUC,IAAI,YAG1BJ,EAAQlC,iBAAiB,SAASI,IAC9BA,EAAEC,iBACF2B,EAAOS,UAAY,IACnBE,EAAQM,EAAKxC,WAjDjB2C,CAAUP,GACHA,EAAInC,QACZa,MAAKb,IACJA,EAAK6B,SAAQ,EAAGX,KAAAA,EAAMC,KAAAA,MAClB,IAAIH,EAAKE,EAAMC,EAAM,QAAQI,eAKzCU,CAAQ,uDH/CR,O","sources":["webpack://test_form/./js/script.js","webpack://test_form/./js/modules/form.js","webpack://test_form/./js/services/services.js","webpack://test_form/./js/modules/posts.js"],"sourcesContent":["\"use stritc\";\r\nimport posts from \"./modules/posts\";\r\nimport bindPostData from \"./modules/form\";\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n    bindPostData();\r\n    \r\n    posts();\r\n\r\n});","import {postData} from \"../services/services\"\r\n// Отправляем пост в базу данных\r\nfunction bindPostData() {\r\n    const form = document.querySelector(\".form\");\r\n\r\n    form.addEventListener(\"submit\", (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData(form);\r\n        const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n        postData(\"http://localhost:3000/data\", json).then(data => {\r\n            console.log(data);\r\n        });\r\n    });\r\n    \r\n}\r\n\r\nexport default bindPostData;","const postData = async (url, data) => { // async говорит что внитри функции есть асинхронный код\r\n    const res = await fetch(url, { // async будет ждать выполнение этой операции\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: data\r\n    });\r\n\r\n    return await res.json();\r\n};\r\n    \r\nconst getResource = async (url) => {\r\n    const res = await fetch(url);\r\n        \r\n    if (!res.ok) { // если в запросе пошло что-то не так, в консоль выкидываем ошибку\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n};\r\n\r\nexport { postData };\r\nexport { getResource };\r\n","import {getResource} from \"../services/services\"\r\n// Вытаскиваем посты из базы данных\r\nfunction posts() {\r\n    class Post {\r\n        constructor(name, text, ...classes) {\r\n            // this.id = id;\r\n            this.name = name;\r\n            this.text = text;\r\n            // this.visible = visible;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(\".posts-list\");\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement(\"li\");\r\n\r\n            if (this.classes.length === 0) {\r\n                this.element = \"post\";\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <span class=\"name\">${this.name}</span>\r\n                <span class=\"message\"><pre>${this.text}</pre></span>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    // getResource(\"http://localhost:3000/data\")\r\n    // .then(data => {\r\n    //     data.forEach(({name, text}) => {\r\n    //         new Post(name, text, \"post\").render();\r\n    //     });\r\n    // });\r\n\r\n    function addPost(url) {\r\n        fetch(url)\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            let obj = JSON.parse(JSON.stringify(data));\r\n            // console.log(obj);\r\n            showLinks(obj);\r\n            return obj.data;\r\n        }).then(data => {\r\n            data.forEach(({ name, text }) => {\r\n                new Post(name, text, \"post\").render();\r\n            });\r\n        });\r\n    }\r\n    \r\n    addPost(\"https://jordan.ashton.fashion/api/goods/30/comments\")\r\n\r\n    // let currentPage = 1; \r\n    // 1. На показать еще делать новый реквест currentPage++;\r\n\r\n    function showLinks(obj) {\r\n        const { links } = obj;\r\n        const parent = document.querySelector(\".pagination\");\r\n        const postList = document.querySelector(\".posts-list\");\r\n        console.log(obj);\r\n        links.forEach((item) => {\r\n            const element = document.createElement(\"li\");\r\n            if (item.active) {\r\n                element.classList.add(\"active\");\r\n                postList.innerHTML = \"\";\r\n            }\r\n            // if (index == obj.current_page && obj.current_page < 2) {\r\n            //     element.classList.add(\"active\");\r\n            //     parent.firstElementChild.classList.add(\"disabled\");\r\n            //     document.querySelector(\".posts-list\").innerHTML = \"\";\r\n            //     console.log(obj);\r\n            // } else if (index == obj.current_page && obj.current_page > 1) {\r\n            //     element.classList.add(\"active\");\r\n            //     document.querySelector(\".posts-list\").innerHTML = \"\";\r\n            // } else if (index == obj.current_page && index == obj.last_page) {\r\n            //     element.classList.add(\"active\");\r\n            //     parent.lastElementChild.classList.add(\"disabled\");\r\n            // }\r\n\r\n            element.innerHTML = `\r\n                <a href=\"\">${item.label}</a>`;\r\n            parent.append(element);\r\n            \r\n            if (item.url == null) {\r\n                element.classList.add(\"disabled\");\r\n            }\r\n\r\n            element.addEventListener(\"click\", e => {\r\n                e.preventDefault();\r\n                parent.innerHTML = \" \";\r\n                addPost(item.url);\r\n                \r\n            });\r\n                \r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default posts;"],"names":["window","addEventListener","form","document","querySelector","e","preventDefault","formData","FormData","async","url","data","res","fetch","method","headers","body","json","postData","JSON","stringify","Object","fromEntries","entries","then","console","log","Post","constructor","name","text","classes","this","parent","render","element","createElement","length","classList","add","forEach","className","innerHTML","append","addPost","response","obj","parse","links","postList","item","active","label","showLinks"],"sourceRoot":""}