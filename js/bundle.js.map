{"version":3,"file":"bundle.js","mappings":"mBAIAA,OAAOC,iBAAiB,oBAAoB,MCF5C,WACI,MAAMC,EAAOC,SAASC,cAAc,SAcpCF,EAAKD,iBAAiB,UAAWI,IAC7BA,EAAEC,iBAEF,MAAMC,EAAW,IAAIC,SAASN,GAfjBO,OAAOC,EAAKC,KACzB,MAAMC,QAAiBC,MAkBd,sDAlByB,CAC9BC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAML,IAGV,aAAaC,EAASK,QAUtBC,CAAS,EAFIC,KAAKC,UAAUC,OAAOC,YAAYf,EAASgB,aAEcC,MAAKb,YDlB/E,GEJJ,WACI,MAAMc,EACFC,YAAYC,EAAMC,KAASC,GACvBC,KAAKH,KAAOA,EACZG,KAAKF,KAAOA,EACZE,KAAKD,QAAUA,EACfC,KAAKC,OAAS5B,SAASC,cAAc,eAGzC4B,SACI,MAAMC,EAAU9B,SAAS+B,cAAc,MAEX,IAAxBJ,KAAKD,QAAQM,QACbL,KAAKG,QAAU,OACfA,EAAQG,UAAUC,IAAIP,KAAKG,UAE3BH,KAAKD,QAAQS,SAAQC,GAAaN,EAAQG,UAAUC,IAAIE,KAG5DN,EAAQO,UAAY,wCACKV,KAAKH,2DACGG,KAAKF,kCAEtCE,KAAKC,OAAOU,OAAOR,KAI3B,SAASS,EAAUhC,GACfG,MAAMH,GACDc,MAAMZ,GACIA,EAASK,SAEnBO,MAAMb,IACH,IAAIgC,EAAMxB,KAAKyB,MAAMzB,KAAKC,UAAUT,IACpCkC,QAAQC,IAAIH,GAOxB,SAAmBI,GACf,MAAM,MAACC,EAAOrC,KAAMsC,EAAU,cAAiBC,GAAeH,GASlE,SAAwBE,GACpBA,EAASX,SAAQ,EAAEX,KAAAA,EAAMC,KAAAA,MACrB,IAAIH,EAAKE,EAAMC,EAAM,QAAQI,aATjCmB,CAAeF,GAanB,SAA+BD,GAC3B,MAAMjB,EAAS5B,SAASC,cAAc,eAChCgD,EAAWjD,SAASC,cAAc,eACxC2B,EAAOS,UAAY,GAEnBQ,EAAMV,SAAQe,IACV,MAAMpB,EAAU9B,SAAS+B,cAAc,MACnCmB,EAAKC,QACLrB,EAAQG,UAAUC,IAAI,UAG1BJ,EAAQO,UAAY,cAAca,EAAKE,YACvCxB,EAAOU,OAAOR,GAEG,OAAboB,EAAK3C,KACLuB,EAAQG,UAAUC,IAAI,YAG1BJ,EAAQhC,iBAAiB,SAASI,IAC9BA,EAAEC,iBACF8C,EAASZ,UAAY,GACrBT,EAAOS,UAAY,IACnBE,EAAUW,EAAK3C,WAjCvB8C,CAAsBR,GAuC1B,SAAkCE,GAC9B/C,SAASC,cAAc,mBAAmBqD,QAAU,WAChDZ,QAAQC,IAAII,GACZR,EAAUQ,IAxCdQ,CAAyBR,GAbjBS,CAAUhB,MAItBD,CAAU,uDFjCV,O","sources":["webpack://test_form/./js/script.js","webpack://test_form/./js/modules/form.js","webpack://test_form/./js/modules/posts.js"],"sourcesContent":["\"use stritc\";\r\nimport posts from \"./modules/posts\";\r\nimport bindPostData from \"./modules/form\";\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n    bindPostData();\r\n    \r\n    posts();\r\n\r\n});","import showPosts from \"./posts\"\r\n\r\nfunction bindPostData() {\r\n    const form = document.querySelector(\".form\");\r\n\r\n    const postData = async (url, data) => {\r\n        const response = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: data\r\n        });\r\n\r\n        return await response.json();\r\n    };\r\n\r\n    form.addEventListener(\"submit\", (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData(form);\r\n        \r\n        const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n        postData(\"https://jordan.ashton.fashion/api/goods/30/comments\", json).then(data => {\r\n            // showPosts(\"https://jordan.ashton.fashion/api/goods/30/comments\");\r\n        });\r\n    });\r\n    \r\n}\r\n\r\nexport default bindPostData;","\"use strict\";\r\n\r\nfunction posts() {\r\n    class Post {\r\n        constructor(name, text, ...classes) {\r\n            this.name = name;\r\n            this.text = text;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(\".posts-list\");\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement(\"li\");\r\n\r\n            if (this.classes.length === 0) {\r\n                this.element = \"post\";\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <span class=\"name\">${this.name}</span>\r\n                <span class=\"message\"><pre>${this.text}</pre></span>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    function showPosts(url) {\r\n        fetch(url)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                let obj = JSON.parse(JSON.stringify(data));\r\n                console.log(obj);\r\n                renderAll(obj);\r\n            });\r\n    }\r\n\r\n    showPosts(\"https://jordan.ashton.fashion/api/goods/30/comments\");\r\n\r\n    function renderAll(commentsResponse) {\r\n        const {links, data: comments, \"next_page_url\": nextPageUrl} = commentsResponse;\r\n\r\n        renderComments(comments);\r\n\r\n        renderPaginationLinks(links);\r\n\r\n        addShowMoreButtonHandler(nextPageUrl);\r\n    }\r\n\r\n    function renderComments(comments) {\r\n        comments.forEach(({name, text}) => {\r\n            new Post(name, text, \"post\").render();\r\n        });\r\n    }\r\n\r\n    function renderPaginationLinks(links) {\r\n        const parent = document.querySelector(\".pagination\");\r\n        const postList = document.querySelector(\".posts-list\");\r\n        parent.innerHTML = \"\";\r\n\r\n        links.forEach(link => {\r\n            const element = document.createElement(\"li\");\r\n            if (link.active) {\r\n                element.classList.add(\"active\");\r\n            }\r\n\r\n            element.innerHTML = `<a href=\"\">${link.label}</a>`;\r\n            parent.append(element);\r\n\r\n            if (link.url === null) {\r\n                element.classList.add(\"disabled\");\r\n            }\r\n\r\n            element.addEventListener(\"click\", e => {\r\n                e.preventDefault();\r\n                postList.innerHTML = \"\";\r\n                parent.innerHTML = \" \";\r\n                showPosts(link.url);\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    function addShowMoreButtonHandler(nextPageUrl) {\r\n        document.querySelector(\".btn-pagination\").onclick = function () {\r\n            console.log(nextPageUrl);\r\n            showPosts(nextPageUrl);\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport default posts;"],"names":["window","addEventListener","form","document","querySelector","e","preventDefault","formData","FormData","async","url","data","response","fetch","method","headers","body","json","postData","JSON","stringify","Object","fromEntries","entries","then","Post","constructor","name","text","classes","this","parent","render","element","createElement","length","classList","add","forEach","className","innerHTML","append","showPosts","obj","parse","console","log","commentsResponse","links","comments","nextPageUrl","renderComments","postList","link","active","label","renderPaginationLinks","onclick","addShowMoreButtonHandler","renderAll"],"sourceRoot":""}